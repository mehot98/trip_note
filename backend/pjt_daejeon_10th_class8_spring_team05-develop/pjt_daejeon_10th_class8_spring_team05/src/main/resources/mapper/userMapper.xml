<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.model.mapper.UserMapper">

	<resultMap type="UserDto" id="user">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="user_password" property="userPassword" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="join_date" property="joinDate" />
		<result column="follow_count" property="followCount" />
		<result column="follower_count" property="followerCount" />
		<result column="profile_img" property="profileImg" />
	</resultMap>

	<!-- Member -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userId}
	</select>

	<insert id="joinUser" parameterType="UserDto">
		insert into members (user_id, user_name, user_password, email_id,
		email_domain, join_date)
		values (#{userId}, #{userName}, #{userPassword}, #{emailId}, #{emailDomain},
		now())
	</insert>

	<select id="login" parameterType="map" resultMap="user">
		select user_id,
		user_name, token
		from members
		where user_id = #{userId} and
		user_password = #{userPassword}
	</select>

	<!-- <select id="getUserProfile" parameterType="String"
		resultMap="user">
		select user_id, user_name, follow_count, follower_count
		from members
		where user_id = #{userId}
	</select>  -->

	<select id="userInfo" parameterType="string" resultMap="user">
		select
		user_name, user_id, email_id, email_domain, join_date, profile_img
		from members
		where user_id = #{userId}
	</select>

	<!-- ADMIN -->
	<select id="listUser" resultMap="user">
		select user_name, user_id, user_password
		from members
	</select>

	<select id="getUser" parameterType="string" resultMap="user">
		select user_id, user_name, user_password, email_id, email_domain, token
		from members
		where user_id = #{userId}
	</select>

	<update id="updateUser" parameterType="UserDto">
		update members
		set user_password = #{userPassword}, email_id = #{emailId}, email_domain
		= #{emailDomain}, profile_img = #{profileImg}
		where user_id = #{userId}
	</update>

	<delete id="deleteUser" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete>

	<update id="saveRefreshToken" parameterType="map">
		update members
		set
		token = #{token}
		where user_id = #{userId}
	</update>

	<select id="getRefreshToken" parameterType="string"
		resultType="string">
		select token
		from members
		where user_id = #{userId}
	</select>

	<update id="deleteRefreshToken" parameterType="map">
		update members
		set
		token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
</mapper>
